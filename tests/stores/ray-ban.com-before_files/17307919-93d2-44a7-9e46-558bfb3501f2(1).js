// Copyright 2006-2020 ClickTale Ltd., US Patent Pending

window.ClickTaleGlobal=window.ClickTaleGlobal||{},ClickTaleGlobal.init=window.ClickTaleGlobal.init||{},function(){function t(){this.started=!1,this.stopCallbacks=[],this.readyCallbacks=[],this.startCallbacks=[],this.xhrCreatedCallback=function(){},this.shouldStartMonitorCallback=function(){}}function n(t){return!!t&&t.constructor.prototype===Object.prototype}t.onReady=function(o,i){var a=t.get(),e=a.shouldStartMonitorCallback();if(void 0===e||!1!==e){var r=a.readyCallbacks,c=r.length;a.diagnose("onready");for(var l=0;l<c;l++)r[l]();if(!a.started){var s,d=a.config,u=n(o),f=function(t){a.started=!0,a.addApplication(t),a.startCallbacks.forEach(function(t){t()})};u&&(o.onStartCallback=f,(s=n(i))?d=i:s=!!d),new ClickTaleMonitor.App(146,u?o:f,s?d:o,s?void 0:i).onStop(function(n){a&&(a.stopCallbacks.forEach(function(t){t()}),t.instance=void 0)})}}else t.instance=void 0};var o=t.prototype;if(o.addApplication=function(t){this.monitor=t},o.configure=function(t){this.config=function t(o,i){for(var a in i=i||{},o){var e=o[a];e instanceof Array?i[a]=e.slice():n(e)?i[a]=t(e,i[a]):i[a]=e}return i}(t,this.config)},o.onStart=function(t){this.monitor&&this.monitor.isMonitoring()?t():this.startCallbacks.push(t)},o.onStop=function(t){this.stopCallbacks.push(t)},o.onReady=function(t){this.readyCallbacks.push(t)},o.onXhrCreated=function(t){this.xhrCreatedCallback=t},o.shouldStartMonitor=function(t){this.shouldStartMonitorCallback=t},o.diagnose=function(t){var n=ClickTaleGlobal.diagnostics,o=n&&n.invoke;if("function"==typeof o)o(n.monitor,t);else{var i=n&&n.monitor,a=i&&i[t];"function"==typeof a&&a()}},t.get=function(){return t.instance||(t.instance=new t)},Object.defineProperty)try{Object.defineProperty(t,"config",{get:function(){return t.instance?t.instance.config:null},enumerable:!0,configurable:!0})}catch(t){}function i(n,o){var i=t.instance;if(i&&i.monitor)return i.monitor[n].apply(i.monitor,o)}var a={stop:function(){i("dispose")},restart:function(t,n){i("restart",[t,n])},shutdown:function(){i("shutdown")},addEvent:function(t){i("addEvent",[t])},addPageTag:function(t,n,o){i("addPageTag",[t,3,o||n])},ctData:function(t){i("ctData",[t])},addDynamicAction:function(t,n){i("addPageTag",[t,4,n])},isMonitoring:function(){return!!i("isMonitoring")},getPid:function(){return 146},getState:function(){return t.get().started?i("getState"):"pending"},endVisit:function(){i("endVisit")},Settings:t},e=window.ClickTaleMonitor||{};for(var r in a)e[r]=a[r];window.ClickTaleMonitor=e}(),ClickTaleGlobal.init.pmc=function(t){var n=ClickTaleGlobal.init.monitorScriptName;var o,i,a,e,r,c=window.ClickTaleScriptSource+n.toLowerCase();ClickTaleMonitor.Settings.get().configure(t),n&&(o=c,e=ClickTaleGlobal.scripts,r=ClickTaleMonitor.Settings.get(),onloaded=function(){i.onreadystatechange=i.onload=null,r.diagnose("onloaded")},(a=document.body||document.head)&&((i=function(t){if(document.documentElement.namespaceURI)try{return document.createElementNS("http://www.w3.org/1999/xhtml",t)}catch(t){}return document.createElement(t)}("script")).onreadystatechange=function(){"loaded"===i.readyState&&onloaded()},i.onload=onloaded,i.async=!0,i.type="text/javascript",i.crossOrigin="anonymous",e.sri&&e.sri.hashes?(i.integrity=e.sri.hashes.monitor,i.src=e.sri.path+"monitor.js"):i.src=o,r.diagnose("onloading"),a.appendChild(i)))};

window.ClickTaleGlobal = window.ClickTaleGlobal || {};
window.ClickTaleSettings = window.ClickTaleSettings || {};

ClickTaleGlobal.init = ClickTaleGlobal.init || {};
ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};
ClickTaleGlobal.scripts.versions = {"wr": "WR-latest.js", "pcc": "17307919-93d2-44a7-9e46-558bfb3501f2.js?DeploymentConfigName=Release_20200514&Version=1", "monitor": "Monitor-1.5.2.js"};
(function (d) {
	var dom="h",
		spe=[92,94,36,46,124,63,42,43,40,41,91,123],
		rep=[98,100,102,104,106,108,110,112,114,116,118,119];
	for(var v,c,i=0,len=d.length;i<len,c=d.charCodeAt(i);i++){		
		if(c>=97&c<=122){v=c+7;v=v>122?v-26:v;v=v%2==0?v-32:v;}
		else if(c>=48&c<=57){v=69+(c-48)*2}
		else if(c==45){v=65}
		else if(spe.indexOf(c)>=0){v=rep[spe.indexOf(c)]}
		else{v=c}
		dom+=String.fromCharCode(v);
	}

	ClickTaleGlobal.init.isAllowed = (function() {
						var doms = ["VHRsLFhJVT","VHRsLFZPhJVT","yHFAiHuhJVT","ZBuNsHZZoBahJVT","aLZahJVT","VHRsLFhJVT"];
			if(location.protocol == "file:") return false;
			for(var i=0, curr; i < doms.length, curr = doms[i]; i++) {
								if(new RegExp("h" + curr + "$", "i").test(dom))
									return true;
			}
			return false;
					})()
})(window.location.host.toLowerCase().replace(/^((www)?\.)/i, ""));

ClickTaleSettings.Proxy = {
	WR: "ir-ing-district.clicktale.net/ctn_v2/",
	ImageFlag: "ir-ing-district.clicktale.net/ctn_v2/"
}
ClickTaleSettings.Protocol = {
	Method: "ImpactRecorder"
}
	var autoMonitorConfig = {
	transport: {
		url: 'https://ir-conductor.clicktale.net/monitor'
	}
};
	ClickTaleGlobal.diagnostics=function(){function n(n,t,o){if(n&&t)for(var r in T){var e=T[r];e.collect(t)&&e.errors.push({message:n,url:t,lineno:o})}return!!S&&S(n,t,o)}function t(n){return"function"==typeof n}function o(){return performance?performance.now():Date.now()}function r(n){++n.sampled>n.repeats?g(n.name):e(n)}function e(n){var t=n.reporter()||{},o=n.errors.splice(0),r=n.level,e=n.url,l={loaded:n.loaded,ready:n.ready,started:n.started,level:o.length?"error":r,errors:encodeURIComponent(JSON.stringify(o))};e&&r!==k&&(n.timeToLoad>0&&(l.timeToLoad=n.timeToLoad),a(n,i(i(e+"?t=log&p="+n.pid,l),t),o))}function i(n,t){for(var o in t)n+="&"+I[o]+"="+t[o];return n}function a(n,o,r){var e=L.sendBeacon,i=function(n){n.errors=r.concat(n.errors)};if(t(e))e.call(L,o)||i(n);else{var a=new Image;a.onerror=a.ontimeout=function(){i(n)},a.timeout=3e4,a.src=o}}function l(n){T[n]&&(T[n].ready=!0)}function c(n){var t=T[n];t&&(t.loaded=!0,t.timeToLoad=t.loadStart?o()-t.loadStart:0),T[n]=t}function d(n){T[n]&&(T[n].loading=!0,T[n].loadStart=o())}function u(n){T[n]&&(T[n].started=!0)}function f(n){T[n]&&(T[n].starting=!0)}function s(n,o,r){var e=window.ClickTaleMonitor;e&&(I.monitorState=40,I.isMonitoring=42,t(e.getPid)&&v(M,e.getPid(),n||"https://conductor.clicktale.net/monitor",/\/monitor-(latest|[\d\.]+).*\.js$/i,function(){var n=t(e.getState)&&e.getState();return!this.errors.length&&n.match(/^(chunk|end)$/i)&&(this.level=k),{monitorState:n,isMonitoring:t(e.isMonitoring)&&e.isMonitoring()}},o||5e3,r||1))}function m(){g(M)}function v(t,o,r,e,i,a,l){T[t]=T[t]||new p(t,o,r,e,i,a,l),y||(S=window.onerror,window.onerror=n,y=!0)}function g(n){var t=T[n];t&&(clearInterval(t.sampler),delete T[n]);for(var o in T)return;y=!1}function p(n,t,o,e,i,a,l){var c=this;c.url=o,c.pid=t,c.errors=[],c.name=n,c.level="alert",c.repeats=l,c.loadStart=c.sampled=c.timeToLoad=0,c.loading=c.loaded=c.starting=c.started=c.ready=!1,c.reporter=function(){return i.call(c)},c.collect=function(n){return!!n.match(e)},c.sampler=setInterval(function(){r(c)},a)}function h(n,t,o){var r=n&&n.name,e=T[r];if(e){var i=e[t];"function"==typeof i&&i.apply(this,o)}}function w(n,t,o){return{on:t,off:o,onready:function(){l(n)},onloaded:function(){c(n)},onloading:function(){d(n)},onstarted:function(){u(n)},onstarting:function(){f(n)}}}var y,S,T={},L=navigator,k="info",M="monitor",I={level:0,loaded:2,ready:4,started:6,errors:8,timeToLoad:12};return{monitor:w(M,s,m),invoke:h}}();

ClickTaleGlobal.scripts.filter = ClickTaleGlobal.scripts.filter || (function () {
	var recordingThreshold = Math.random() * 100;

	return {
		isRecordingApproved: function(percentage) {
			return recordingThreshold <= percentage;
		}
	}
})();
	
if (typeof(ct_dispatcher) == 'undefined') {
	ct_dispatcher = {
		configName : null,
		cookieName : "ct_configName",
		getParameterByName : function (name) {
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
			var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS, "i");
			var results = regex.exec(window.location.search);
			if(results == null)
				return "";
			else
				return decodeURIComponent(results[1].replace(/\+/g, " "));
		},
		createCookie: function (name,value,days) {
			if (days) {
				var date = new Date();
				date.setTime(date.getTime()+(days*24*60*60*1000));
				var expires = "; expires="+date.toGMTString();
			}
			else var expires = "";
			document.cookie = name+"="+value+expires+"; path=/";
		},
		readCookie : function (name) {
			var nameEQ = name + "=";
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1,c.length);
				if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
			}
			return null;
		}
	};
	
	var ct_pdc_qs_val = ct_dispatcher.getParameterByName(ct_dispatcher.cookieName);
	if (ct_pdc_qs_val) {
		ct_dispatcher.createCookie(ct_dispatcher.cookieName, ct_pdc_qs_val, 14);
		ct_dispatcher.configName = ct_pdc_qs_val;
	}
	else {
		ct_dispatcher.configName = ct_dispatcher.readCookie(ct_dispatcher.cookieName);
	}	
}

if (typeof (ClickTaleCreateDOMElement) != "function")
{
	ClickTaleCreateDOMElement = function(tagName)
	{
		if (document.createElementNS)
		{
			return document.createElementNS('http://www.w3.org/1999/xhtml', tagName);
		}
		return document.createElement(tagName);
	}
}

if (typeof (ClickTaleAppendInHead) != "function")
{
	ClickTaleAppendInHead = function(element)
	{
		var parent = document.getElementsByTagName('head').item(0) || document.documentElement;
		parent.appendChild(element);
	}
}

if (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != "function")
{
	ClickTaleXHTMLCompliantScriptTagCreate = function(code)
	{
		var script = ClickTaleCreateDOMElement('script');
		script.setAttribute("type", "text/javascript");
		script.text = code;
		return script;
	}
}	
ClickTaleGlobal.init.configFoundPTC = false;
if (ct_dispatcher.configName == 'Release_20200514_1')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 8\r\n\/\/ WR destination: www46\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/LUXO\r\n(function () {\r\n    if (typeof ClickTaleCreateDOMElement === \"function\") {\r\n        var oldClickTaleCreateDOMElement = ClickTaleCreateDOMElement;\r\n        ClickTaleCreateDOMElement = function (tagName) {\r\n            var scriptEl = oldClickTaleCreateDOMElement.apply(this, arguments);\r\n            if (typeof tagName == \u0027string\u0027 \u0026\u0026 tagName.toLowerCase() == \u0027script\u0027) {\r\n                scriptEl.addEventListener(\u0027load\u0027, function () {\r\n                    if (this.src \u0026\u0026 this.src.indexOf(\u0027\/pcc\/\u0027) != -1) {\r\n                        if (typeof ClickTaleField == \u0027function\u0027) {\r\n                            ClickTaleField(\u0027pcc loaded\u0027, \u0027true\u0027);\r\n                        } else {\r\n                            window.ClickTaleSettings.PTC.fieldsBuffer = window.ClickTaleSettings.PTC.fieldsBuffer || [];\r\n                            window.ClickTaleSettings.PTC.fieldsBuffer.push([\u0027pcc loaded\u0027, \u0027true\u0027]);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            return scriptEl;\r\n        }\r\n    }\r\n})();\r\n\r\n\/\/PTC Code Version 9.8\r\nif (window.ClickTaleMonitor \u0026\u0026 window.ClickTaleMonitor.Settings \u0026\u0026 window.ClickTaleMonitor.Settings.get) {\r\n    window.ClickTaleMonitor.Settings.get().configure({\r\n        metrics: {\r\n            modifiedChunkToggle: false\r\n        }\r\n    });\r\n}\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.Compression = window.ClickTaleSettings.Compression || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\nwindow.ClickTaleUIDCookieName = \u0027WRUIDAWS20180402\u0027;\r\n\r\nfunction deleteIrrelevantUIDCookies(relevant) {\r\n    var cookieArray = document.cookie.replace(\/\\s+\/g, \u0027\u0027).split(\";\");\r\n    var hostArray = location.host.split(\u0027.\u0027);\r\n    var topDom = (hostArray.length \u003c= 2 ? location.host : hostArray.slice(1).join(\u0027.\u0027));\r\n    for (var i = 0; i \u003c cookieArray.length; i++) {\r\n        var currentCookie = cookieArray[i];\r\n        var cookieKey = currentCookie.substring(0, currentCookie.indexOf(\u0027=\u0027));\r\n        if (cookieKey.indexOf(\u0027WRUID\u0027) \u003e -1 \u0026\u0026 relevant.indexOf(cookieKey) == -1) {\r\n            document.cookie = cookieKey + \"=\u0027\u0027;domain=.\" + topDom + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n            document.cookie = cookieKey + \"=\u0027\u0027;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n        }\r\n    }\r\n}\r\ndeleteIrrelevantUIDCookies([window.ClickTaleUIDCookieName]);\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        window.ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        window.ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n\r\n    var isFV = !!fv;\r\n    if (typeof ClickTaleField == \u0027function\u0027) {\r\n        ClickTaleField(\u0027okToRunPCC\u0027, isFV.toString());\r\n    } else {\r\n        window.ClickTaleSettings.PTC.fieldsBuffer = window.ClickTaleSettings.PTC.fieldsBuffer || [];\r\n        window.ClickTaleSettings.PTC.fieldsBuffer.push([\u0027okToRunPCC\u0027, isFV.toString()]);\r\n    }\r\n    return fv;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \".ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \".engravingBox .img h3 , .pac-item, .pac-item *, .ctHidden,.wcs-delivery-right,.wcs-myOrder-delivery .wcs-omega\u003espan,#saved_addresses .wcs-details-address-book span,.delivery-addr-exp p,#saved_addresses h4,#delivery_address\u003ediv,#delivery_address\u003ediv\u003espan,.trade,.wcs-login-link,.wcs-remixed-engraving,span.wcs-product-blurb span,#forgotPassword_email,.address span,.address p,.addressname,#ty-header span\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \"#CEPreviewBox p,[id*=\u0027standardinternal\u0027] .img h3,[id*=\u0027standardexternal\u0027] .img h3,[id*=\u0027premiumexternal_\u0027] .img h3,.wcs-payment-confirm-title h3 , .wcs-payment-confirm-title span span, .wcs-order-details .wcs-alpha\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\/\/LUXO-179\r\n    selector: \"div.awesomplete li, div.awesomplete li mark, #myaccount-details div.rb-myaccount-details-body div.rb-data-item p.rb-data-item-value\",\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [];\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClickTalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) { }\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    maxUrlLength: 600,\r\n    subscriberId: \u0027233397\u0027,\r\n    pid: \u00278\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: \/webapp\\\/wcs\\\/stores\\\/servlet\\\/GetEspotContent\/i,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    reduceUrl: function (strUrl) {\r\n        var queryExist = strUrl.indexOf(\u0027?\u0027);\r\n        if (queryExist \u003e -1) {\r\n            var queryString = strUrl.slice(queryExist, strUrl.length);\r\n            var dividedUrl = strUrl.split(\u0027?\u0027);\r\n            var urlWithoutQuery = dividedUrl[0];\r\n\r\n            queryString = queryString.replace(\/\\W\/g, \u0027\u0027);\r\n            var fileName = urlWithoutQuery.slice(urlWithoutQuery.lastIndexOf(\u0027\/\u0027) + 1, urlWithoutQuery.length);\r\n            queryString = queryString + fileName;\r\n            var queryStringLength = queryString.length;\r\n            if (queryStringLength \u003e 450) {\r\n                queryString = queryString.slice(queryStringLength - 450, queryStringLength);\r\n            }\r\n            strUrl = urlWithoutQuery.slice(0, urlWithoutQuery.indexOf(fileName) + 1) + queryString;\r\n        }\r\n        return strUrl;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            if ((this.isNeedForImg \u0026\u0026 url.length \u003e this.maxUrlLength) || (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(url))) {\r\n                url = window.ClickTaleSettings.PTC.AssetManager.reduceUrl(url);\r\n\r\n                AMUrl = this.getPrefixUrl() + \u0027\/\u0027 + type + \u0027\/CTAMREDUCED\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n            } else {\r\n                AMUrl = this.getPrefixUrl() + \u0027\/\u0027 + type + \u0027\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \").replace(\/\\?.*\/g, \"\");\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    changeUrlToS3: function (bodyClone, selector, attribute, type) {\r\n        if (typeof selector == \u0027string\u0027 \u0026\u0026 typeof attribute == \u0027string\u0027 \u0026\u0026 typeof type == \u0027string\u0027) {\r\n            Array.prototype.forEach.call(bodyClone.querySelectorAll(selector), function (el, ind) {\r\n                var attr = el.getAttribute(attribute);\r\n                if (attr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1 \u0026\u0026 attr.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                    if (attr.indexOf(\u0027http\u0027) == -1) {\r\n                        var element = attribute == \u0027href\u0027 ? \u0027link\u0027 : \u0027img\u0027;\r\n                        var liveElement = document.querySelector(element + \u0027[\u0027 + attribute + \u0027=\"\u0027 + attr + \u0027\"]\u0027);\r\n                        if (liveElement \u0026\u0026 liveElement[attribute]) {\r\n                            attr = liveElement[attribute];\r\n                        }\r\n                    }\r\n                    var finalAssetURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(type, attr);\r\n                    el.setAttribute(attribute, finalAssetURL);\r\n                    if (finalAssetURL.indexOf(\u0027CTAMREDUCED\u0027) \u003e -1) {\r\n                        el.setAttribute(\u0027data-ctam\u0027, attr);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    makeChanges: function (bodyClone) {\r\n        if (this.pid \u0026\u0026 this.subscriberId) {\r\n\r\n            window.ClickTaleSettings.PTC.AssetManager.changeUrlToS3(bodyClone, \u0027ctdep-link[href][rel*=\"stylesheet\"]\u0027, \u0027href\u0027, \u0027CSS\u0027);\r\n            if (this.isNeedForImg) {\r\n                window.ClickTaleSettings.PTC.AssetManager.changeUrlToS3(bodyClone, \u0027ctdep-img[src]\u0027, \u0027src\u0027, \u0027IMAGE\u0027);\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function (innerHTML) {\r\n    if (innerHTML instanceof Element) {\r\n        innerHTML = innerHTML.innerHTML;\r\n    }\r\n\r\n    var reg = \/\u003c(area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)[^\u003e]*\u003e\/gi;\r\n    var newNode = document.createElement(\u0027div\u0027);\r\n    var docFrag = document.createDocumentFragment();\r\n    docFrag.appendChild(newNode);\r\n    if (document.documentMode) {\r\n        innerHTML = innerHTML\r\n            .replace(\/\\$\/g, \u0027$$$$\u0027)\r\n            .replace(\/(\u003csvg[\\s\\S]+?\u003c\\\/svg\u003e)\/gi, function (m, g1) {\r\n                if (g1) {\r\n                    return \u0027\u003c!--clicktalesvgreplace \u0027 + g1.replace(\/\u003c!--[\\s\\S]+?--\u003e\/g, \u0027\u0027) + \u0027 --\u003e\u0027;\r\n                }\r\n                return m;\r\n            });\r\n    }\r\n    innerHTML = innerHTML\r\n        .replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027)\r\n        .replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027)\r\n        .replace(reg, \u0027$\u0026\u003c\\\/$1\u003e\u0027)\r\n        .replace(\/(\u003c\\\/?)([A-Za-z])\/g, \u0027$1ctdep-$2\u0027)\r\n        .replace(\/ctdep-style\/gi, \u0027style\u0027);\r\n\r\n    newNode.innerHTML = innerHTML;\r\n\r\n    return newNode;\r\n};\r\n\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n\r\n        var a = document.createElement(\"script\"),\r\n            s = document.getElementsByTagName(\"script\")[0];\r\n        a.async = true;\r\n        a.crossOrigin = \"anonymous\";\r\n        a.type = \"text\/javascript\";\r\n        a.src = \"https:\/\/cdnssl.clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        s.parentNode.insertBefore(a, s);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            LiveExclude: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function (changeMonitor) {\r\n                changeMonitor.observe();\r\n                if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n                    changeMonitor.exclude({\r\n                        selector: window.ClickTaleCMSelector,\r\n                        multiple: true\r\n                    });\r\n                }\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) != -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function (settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 1000000,\r\n                MaxElementCount: 10000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n\r\n        var EnableCM = document.querySelector(\u0027.wcs-hd-container .wcs-primary\u0027) ? false : true;\r\n        var locationL = location.pathname;\r\n        EnableCM = EnableCM \u0026\u0026 (((locationL.indexOf(\"usa\/mobile\") \u003e -1 \u0026\u0026 locationL.indexOf(\"R\") \u003e -1) || (location.href.toLowerCase() == \"https:\/\/www.ray-ban.com\/usa\/mobile\/sunglasses\/clp\")) ? false : true);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n            Enable: EnableCM,\r\n            Repeats: 20,\r\n            Interval: 200\r\n        };\r\n\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                        selector: selector,\r\n                        transform: (function (attributesArr) {\r\n                            return function (el) {\r\n                                var attrs = el.attributes;\r\n                                var attrsToReturn = {}\r\n                                for (var i = 0; i \u003c attrs.length; i++) {\r\n                                    var name = attrs[i].nodeName;\r\n                                    attrsToReturn[name] = attrs[i].nodeValue;\r\n                                }\r\n                                for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                    var attr = attributesArr[u];\r\n                                    var attrib = el.getAttribute(attr);\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                }\r\n\r\n                                return attrsToReturn;\r\n                            }\r\n                        })(attributesArr)\r\n                    });\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: [selector, function (elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function (curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n                            }, []);\r\n                            return Array.prototype.filter.call(els, function (child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n                            });\r\n                        }],\r\n                        transform: function (el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function () {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function (rewriteApi) {\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function (buffer) {\r\n                var bodyClone = ClickTaleSettings.PTC.cloneNodeIE9(buffer);\r\n\r\n                if (window.ClickTaleSettings.PTC.AssetManager \u0026\u0026\r\n                    window.ClickTaleSettings.PTC.AssetManager.isActive \u0026\u0026\r\n                    typeof window.ClickTaleSettings.PTC.AssetManager.makeChanges == \u0027function\u0027) {\r\n                    window.ClickTaleSettings.PTC.AssetManager.makeChanges(bodyClone);\r\n                }\r\n\r\n                var selectorReg = \/((?:^|,|\\s|\u003e|\\+|\\~)+)([A-Za-z])\/g;\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027].replace(selectorReg, \u0027$1ctdep-$2\u0027);\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function (el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function (child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToRemove, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToReplace, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var reg = \/\u003e\u003c\\\/(?:area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)\u003e\/gi;\r\n                var clone = bodyClone.innerHTML.replace(\/ctdep-\/gi, \u0027\u0027).replace(reg, \u0027 \\\/\u003e\u0027).replace(\/\u003c!--clicktalesvgreplace ([\\s\\S]+?)--\u003e\/g, \u0027$1\u0027);\r\n                return clone;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"https:\\\/\\\/cdnssl.clicktale.net\\\/www\\\/tc\\\/jquery.min.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n        \/\/AM ========= FONTS ===========\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027@font-face{.*?}\u0027, \u0027gim\u0027),\r\n            replace: \u0027\u0027\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cinput[^\u003e]*type=\"(?:text|email)\"[^\u003e]*value=\")([^\"]+)(\"[^\u003e]*\u003e)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----$3\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cinput[^\u003e]*type=\"email\"[^\u003e]*value=\")([^\"]+)(\"[^\u003e]*\u003e)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----$3\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cdiv class=\"rb-order-number\"\u003e)(\u003cspan\u003e[^\u003c]*\u003c\/span\u003e)\u003cp\u003e([^\u003c]*)\u003c\/p\u003e\u0027, \u0027gim\u0027),\r\n            replace: \"$1$2-----\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003ch1 class=\"rb-page-header\"\u003e[^T]*)Thank you for your order([^\\.]*\\.)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cdiv class=\"rb-page-text\"\u003e)([^:]*:)([^\u003c]*)\u003c\/p\u003e\u0027, \u0027gim\u0027),\r\n            replace: \"$1$2-----\"\r\n        });\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\/\/Start CAP Integrations\r\n(function () {\r\n\r\n    function init(context) {\r\n\r\n        function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n            csKey = csTypeVendorPrefix + csKey;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"trackDynamicVariable\", {\r\n                key: csKey,\r\n                value: csValue\r\n            }]);\r\n\r\n            if (csEventType === \"etr\") {\r\n                _uxa.push([\"trackEventTriggerRecording\", \"@ET@ \" + csKey]);\r\n            } else if (csEventType === \"reg\") {\r\n                _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n            }\r\n\r\n            if (csPV) {\r\n                _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n            }\r\n        };\r\n\r\n        \/*\r\n         *Name: Qubit CAP Integration\r\n         *Version: 1.9\r\n         *Required Shared Components: Self Invoking function, _uxa afterPageView callback, sendToCS\r\n         *\/\r\n        function startQBIntegration() {\r\n            integrationQBstarted = true;\r\n\r\n            function startAB() {\r\n                var tvp = \"AB_QB_\";\r\n                var campaignName = \"\";\r\n                var variationName = \"\";\r\n\r\n                window.uv.on(\"qubit.experience\", function (e) {\r\n                    if (e \u0026\u0026 typeof e.experienceId === \"number\" \u0026\u0026 typeof e.variationMasterId === \"number\" \u0026\u0026 typeof e.isControl === \"boolean\") {\r\n                        if (window.__qubit \u0026\u0026 __qubit.experiences \u0026\u0026 typeof __qubit.experiences.getExperiencesMeta === \"function\") {\r\n                            var allQubitVariants = __qubit.experiences.getExperiencesMeta();\r\n\r\n                            if (allQubitVariants \u0026\u0026 typeof allQubitVariants === \"object\") {\r\n                                for (var i = 0; i \u003c allQubitVariants.length; i++) {\r\n                                    if (allQubitVariants[i].id === e.experienceId \u0026\u0026 typeof allQubitVariants[i].id === \"number\") {\r\n                                        if (allQubitVariants[i].name) {\r\n                                            campaignName = allQubitVariants[i].name;\r\n                                        } else {\r\n                                            campaignName = e.experienceId;\r\n                                        }\r\n                                        if (e.isControl === true) {\r\n                                            variationName = \"Control\";\r\n                                        } else if (allQubitVariants[i].variations \u0026\u0026 allQubitVariants[i].variations[e.variationId] \u0026\u0026 allQubitVariants[i].variations[e.variationId].name) {\r\n                                            variationName = allQubitVariants[i].variations[e.variationId].name;\r\n                                        } else {\r\n                                            variationName = e.variationMasterId;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (campaignName \u0026\u0026 variationName) {\r\n                            sendToCS(tvp, campaignName, variationName);\r\n                        }\r\n\r\n                    }\r\n                }).replay();\r\n            }\r\n\r\n            startAB();\r\n\r\n            function startFB() {\r\n                var tvp = \"FB_QB_\";\r\n                var fbQname = \"\";\r\n                var fbValue = \"\";\r\n\r\n                window.uv.on(\"qubit.surveyResponseItem\", function (e) {\r\n                    if (e \u0026\u0026 e.value \u0026\u0026 e.value.boolean \u0026\u0026 e.value.boolean === true) {\r\n                        if (e.question \u0026\u0026 e.question.text \u0026\u0026 e.question.type \u0026\u0026 (e.question.type === \"radio\" || e.question.type === \"checkbox\")) {\r\n                            fbQname = e.question.text;\r\n                            if (typeof (e.choice) === \"object\" \u0026\u0026 typeof (e.choice.order) === \"number\" \u0026\u0026 typeof (e.choice.text) === \"string\") {\r\n                                fbValue = e.choice.order + \"-\" + e.choice.text;\r\n                                sendToCS(tvp, \"Feedback Submitted - \" + fbQname, fbValue, \"etr\", \"cs_qubit=feedback_submitted\");\r\n                            }\r\n                        }\r\n                    } else if (e \u0026\u0026 e.question \u0026\u0026 e.question.text \u0026\u0026 e.question.type === \"score\") {\r\n                        var fbQname = e.question.text;\r\n                        if (typeof (e.value) === \"object\" \u0026\u0026 typeof (e.value.integer) === \"string\") {\r\n                            var fbValue = e.value.integer;\r\n\r\n                            if (fbQname \u0026\u0026 fbValue) {\r\n                                sendToCS(tvp, \"Feedback Rating - \" + fbQname, fbValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            startFB();\r\n        }\r\n\r\n        var integrationQBstarted = false;\r\n\r\n        var uv = window.uv;\r\n        if (uv) {\r\n            startQBIntegration();\r\n        } else {\r\n            Object.defineProperty(window, \"uv\", {\r\n                configurable: true,\r\n                get: function () {\r\n                    return uv;\r\n                },\r\n                set: function (n) {\r\n                    uv = n;\r\n                    if (!integrationQBstarted) {\r\n                        startQBIntegration();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \/\/Qubit CAP Integration End\r\n    }\r\n\r\n    function callback(context) {\r\n        if (!disableCallback) {\r\n            disableCallback = true;\r\n            init(context);\r\n\r\n            if (window.CS_CONF) {\r\n                CS_CONF.integrations = CS_CONF.integrations || [];\r\n                CS_CONF.integrations.push(\"Qubit\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var disableCallback = false;\r\n\r\n    window._uxa = window._uxa || [];\r\n    _uxa.push([\"afterPageView\", callback]);\r\n\r\n})();\r\n\/\/End CAP Integrations\r\n\r\n\/\/Integrations\r\nwindow.ClickTaleSettings.PTC.Integrations = [\r\n    \"Monetate | Core\",\r\n    \"Monetate | CEC\",\r\n    \"Qubit | Core\",\r\n    \"Qubit | CEC\",\r\n    \"Qubit | Contentsquare\"\r\n];\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.monitorScriptName = \"Monitor-1.5.2.js\";\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig);\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u002717307919-93d2-44a7-9e46-558bfb3501f2.js?DeploymentConfigName=Release_20200514_1\u0026Version=1\u0027;\r\n\t\t\tvar scripts = ClickTaleGlobal.scripts;\r\n\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(scripts.sri \u0026\u0026 scripts.sri.hashes){\n        pccScriptElement.integrity = scripts.sri.hashes.pcc;\n        pccScriptElement.src = scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=8, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www46\",\r\n\t\tSubsId=233397;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function() {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageTime = Date.now();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        \/\/LUXO-314\r\n        if (document.location.href.indexOf(\u0027customise\u0027) \u003e -1 || document.location.href.indexOf(\u0027customize\u0027) \u003e -1) {\r\n            return !!document.querySelectorAll(\".fc-nav-flyout-without-ags \u003e li\").length;\r\n        }\r\n        \/\/LUXO-367\r\n        if(document.location.href == \"https:\/\/www.ray-ban.com\/usa\"){\r\n            var counter =0;\r\n            document.querySelectorAll(\u0027#rb-homepage section[data-module*=\"row\"]\u0027).forEach((el)=\u003e{\r\n                counter += el.children.length;\r\n            });\r\n            return ( (counter \u003e 3) \u0026\u0026 (document.querySelector(\u0027#rb-homepage section[data-module*=\"row\"]\u0027).offsetHeight \u003e 0) );\r\n        }\r\n\t\tif(document.querySelectorAll(\u0027footer\u0027) \u003e 0) {\r\n\t\t\treturn (document.querySelectorAll(\u0027footer .wcs-hidden\u0027).length \u003c 5);\r\n\t\t}\/\/LUXO-185\r\n\t\t\r\n\t\tif (document.location.pathname.indexOf(\"customize\/rb\") \u003e -1) {\r\n            return document.getElementById(\u0027proLoaderBox\u0027) === null;\r\n        } else if (document.location.pathname.indexOf(\"\/usa\/customize\") \u003e -1) {\r\n            return document.querySelectorAll(\u0027#wcs_footer\u0027).length \u003e 0 \u0026\u0026 document.querySelectorAll(\u0027.fpls-box-overlay-content .fpls-box-overlay-user\u0027).length \u003e 2;\r\n        } else if (document.location.pathname.indexOf(\"\/usa\/mobile\/customize\") \u003e -1) {\r\n            return document.querySelectorAll(\u0027.fpls-box-overlay-content .fpls-box-overlay-user\u0027).length \u003e 0;\r\n        } else if (document.location.pathname.indexOf(\"sunglasses\/ferrari\/clp\") \u003e -1) {\r\n            return !!document.querySelector(\u0027.b-loaded\u0027);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n\/\/LUXO-18\r\nif (Array.isArray(window.ClickTaleSettings.PTC.fieldsBuffer)) {\r\n    window.ClickTaleSettings.PTC.fieldsBuffer.forEach(function(fieldArr) {\r\n        if (typeof ClickTaleField == \u0027function\u0027) {\r\n            ClickTaleField(fieldArr[0], fieldArr[1]);\r\n        }\r\n    })\r\n}\r\n\r\nif (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    \/\/AB Test Integration Timeout\r\n    setTimeout(function() {\r\n        if (document.location.href.indexOf(\"usa\/mobile\/\") \u003e -1) {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 70, doUpload);\r\n        }if (document.location.href == \"https:\/\/www.ray-ban.com\/usa\") {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 80, doUpload);\r\n        }\r\n         else {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 50, doUpload);\r\n        }\r\n    }, 1000);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\t\twindow._uxa = window._uxa || [];\r\n\twindow._uxa.push([\u0027startDataCollection\u0027]);\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar scripts = ClickTaleGlobal.scripts;\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(scripts.sri \u0026\u0026 scripts.sri.hashes){\r\n        wrScript.integrity = scripts.sri.hashes.wr;\r\n        wrScript.src = scripts.sri.path + \"wr.js\";\r\n\t}else {\r\n        wrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-eu1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-eu1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
				document.body.appendChild(script);
			})();
	}		
if (ct_dispatcher.configName == 'dev_IMP-144')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 8\r\n\/\/ WR destination: www46\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/LUXO\r\n(function () {\r\n    if (typeof ClickTaleCreateDOMElement === \"function\") {\r\n        var oldClickTaleCreateDOMElement = ClickTaleCreateDOMElement;\r\n        ClickTaleCreateDOMElement = function (tagName) {\r\n            var scriptEl = oldClickTaleCreateDOMElement.apply(this, arguments);\r\n            if (typeof tagName == \u0027string\u0027 \u0026\u0026 tagName.toLowerCase() == \u0027script\u0027) {\r\n                scriptEl.addEventListener(\u0027load\u0027, function () {\r\n                    if (this.src \u0026\u0026 this.src.indexOf(\u0027\/pcc\/\u0027) != -1) {\r\n                        if (typeof ClickTaleField == \u0027function\u0027) {\r\n                            ClickTaleField(\u0027pcc loaded\u0027, \u0027true\u0027);\r\n                        } else {\r\n                            window.ClickTaleSettings.PTC.fieldsBuffer = window.ClickTaleSettings.PTC.fieldsBuffer || [];\r\n                            window.ClickTaleSettings.PTC.fieldsBuffer.push([\u0027pcc loaded\u0027, \u0027true\u0027]);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            return scriptEl;\r\n        }\r\n    }\r\n})();\r\n\r\n\/\/PTC Code Version 9.8\r\nif (window.ClickTaleMonitor \u0026\u0026 window.ClickTaleMonitor.Settings \u0026\u0026 window.ClickTaleMonitor.Settings.get) {\r\n    window.ClickTaleMonitor.Settings.get().configure({\r\n        metrics: {\r\n            modifiedChunkToggle: false\r\n        }\r\n    });\r\n}\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.Compression = window.ClickTaleSettings.Compression || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\nwindow.ClickTaleUIDCookieName = \u0027WRUIDAWS20180402\u0027;\r\n\r\nfunction deleteIrrelevantUIDCookies(relevant) {\r\n    var cookieArray = document.cookie.replace(\/\\s+\/g, \u0027\u0027).split(\";\");\r\n    var hostArray = location.host.split(\u0027.\u0027);\r\n    var topDom = (hostArray.length \u003c= 2 ? location.host : hostArray.slice(1).join(\u0027.\u0027));\r\n    for (var i = 0; i \u003c cookieArray.length; i++) {\r\n        var currentCookie = cookieArray[i];\r\n        var cookieKey = currentCookie.substring(0, currentCookie.indexOf(\u0027=\u0027));\r\n        if (cookieKey.indexOf(\u0027WRUID\u0027) \u003e -1 \u0026\u0026 relevant.indexOf(cookieKey) == -1) {\r\n            document.cookie = cookieKey + \"=\u0027\u0027;domain=.\" + topDom + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n            document.cookie = cookieKey + \"=\u0027\u0027;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n        }\r\n    }\r\n}\r\ndeleteIrrelevantUIDCookies([window.ClickTaleUIDCookieName]);\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        window.ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        window.ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n\r\n    var isFV = !!fv;\r\n    if (typeof ClickTaleField == \u0027function\u0027) {\r\n        ClickTaleField(\u0027okToRunPCC\u0027, isFV.toString());\r\n    } else {\r\n        window.ClickTaleSettings.PTC.fieldsBuffer = window.ClickTaleSettings.PTC.fieldsBuffer || [];\r\n        window.ClickTaleSettings.PTC.fieldsBuffer.push([\u0027okToRunPCC\u0027, isFV.toString()]);\r\n    }\r\n    return fv;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \".ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \".engravingBox .img h3 , .pac-item, .pac-item *, .ctHidden,.wcs-delivery-right,.wcs-myOrder-delivery .wcs-omega\u003espan,#saved_addresses .wcs-details-address-book span,.delivery-addr-exp p,#saved_addresses h4,#delivery_address\u003ediv,#delivery_address\u003ediv\u003espan,.trade,.wcs-login-link,.wcs-remixed-engraving,span.wcs-product-blurb span,#forgotPassword_email,.address span,.address p,.addressname,#ty-header span\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \"#CEPreviewBox p,[id*=\u0027standardinternal\u0027] .img h3,[id*=\u0027standardexternal\u0027] .img h3,[id*=\u0027premiumexternal_\u0027] .img h3,.wcs-payment-confirm-title h3 , .wcs-payment-confirm-title span span, .wcs-order-details .wcs-alpha\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\/\/LUXO-179\r\n    selector: \"div.awesomplete li, div.awesomplete li mark, #myaccount-details div.rb-myaccount-details-body div.rb-data-item p.rb-data-item-value\",\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [];\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClickTalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) { }\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    maxUrlLength: 600,\r\n    subscriberId: \u0027233397\u0027,\r\n    pid: \u00278\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: \/webapp\\\/wcs\\\/stores\\\/servlet\\\/GetEspotContent\/i,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    reduceUrl: function (strUrl) {\r\n        var queryExist = strUrl.indexOf(\u0027?\u0027);\r\n        if (queryExist \u003e -1) {\r\n            var queryString = strUrl.slice(queryExist, strUrl.length);\r\n            var dividedUrl = strUrl.split(\u0027?\u0027);\r\n            var urlWithoutQuery = dividedUrl[0];\r\n\r\n            queryString = queryString.replace(\/\\W\/g, \u0027\u0027);\r\n            var fileName = urlWithoutQuery.slice(urlWithoutQuery.lastIndexOf(\u0027\/\u0027) + 1, urlWithoutQuery.length);\r\n            queryString = queryString + fileName;\r\n            var queryStringLength = queryString.length;\r\n            if (queryStringLength \u003e 450) {\r\n                queryString = queryString.slice(queryStringLength - 450, queryStringLength);\r\n            }\r\n            strUrl = urlWithoutQuery.slice(0, urlWithoutQuery.indexOf(fileName) + 1) + queryString;\r\n        }\r\n        return strUrl;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            if ((this.isNeedForImg \u0026\u0026 url.length \u003e this.maxUrlLength) || (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(url))) {\r\n                url = window.ClickTaleSettings.PTC.AssetManager.reduceUrl(url);\r\n\r\n                AMUrl = this.getPrefixUrl() + \u0027\/\u0027 + type + \u0027\/CTAMREDUCED\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n            } else {\r\n                AMUrl = this.getPrefixUrl() + \u0027\/\u0027 + type + \u0027\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \").replace(\/\\?.*\/g, \"\");\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    changeUrlToS3: function (bodyClone, selector, attribute, type) {\r\n        if (typeof selector == \u0027string\u0027 \u0026\u0026 typeof attribute == \u0027string\u0027 \u0026\u0026 typeof type == \u0027string\u0027) {\r\n            Array.prototype.forEach.call(bodyClone.querySelectorAll(selector), function (el, ind) {\r\n                var attr = el.getAttribute(attribute);\r\n                if (attr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1 \u0026\u0026 attr.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                    if (attr.indexOf(\u0027http\u0027) == -1) {\r\n                        var element = attribute == \u0027href\u0027 ? \u0027link\u0027 : \u0027img\u0027;\r\n                        var liveElement = document.querySelector(element + \u0027[\u0027 + attribute + \u0027=\"\u0027 + attr + \u0027\"]\u0027);\r\n                        if (liveElement \u0026\u0026 liveElement[attribute]) {\r\n                            attr = liveElement[attribute];\r\n                        }\r\n                    }\r\n                    var finalAssetURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(type, attr);\r\n                    el.setAttribute(attribute, finalAssetURL);\r\n                    if (finalAssetURL.indexOf(\u0027CTAMREDUCED\u0027) \u003e -1) {\r\n                        el.setAttribute(\u0027data-ctam\u0027, attr);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    makeChanges: function (bodyClone) {\r\n        if (this.pid \u0026\u0026 this.subscriberId) {\r\n\r\n            window.ClickTaleSettings.PTC.AssetManager.changeUrlToS3(bodyClone, \u0027ctdep-link[href][rel*=\"stylesheet\"]\u0027, \u0027href\u0027, \u0027CSS\u0027);\r\n            if (this.isNeedForImg) {\r\n                window.ClickTaleSettings.PTC.AssetManager.changeUrlToS3(bodyClone, \u0027ctdep-img[src]\u0027, \u0027src\u0027, \u0027IMAGE\u0027);\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function (innerHTML) {\r\n    if (innerHTML instanceof Element) {\r\n        innerHTML = innerHTML.innerHTML;\r\n    }\r\n\r\n    var reg = \/\u003c(area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)[^\u003e]*\u003e\/gi;\r\n    var newNode = document.createElement(\u0027div\u0027);\r\n    var docFrag = document.createDocumentFragment();\r\n    docFrag.appendChild(newNode);\r\n    if (document.documentMode) {\r\n        innerHTML = innerHTML\r\n            .replace(\/\\$\/g, \u0027$$$$\u0027)\r\n            .replace(\/(\u003csvg[\\s\\S]+?\u003c\\\/svg\u003e)\/gi, function (m, g1) {\r\n                if (g1) {\r\n                    return \u0027\u003c!--clicktalesvgreplace \u0027 + g1.replace(\/\u003c!--[\\s\\S]+?--\u003e\/g, \u0027\u0027) + \u0027 --\u003e\u0027;\r\n                }\r\n                return m;\r\n            });\r\n    }\r\n    innerHTML = innerHTML\r\n        .replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027)\r\n        .replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027)\r\n        .replace(reg, \u0027$\u0026\u003c\\\/$1\u003e\u0027)\r\n        .replace(\/(\u003c\\\/?)([A-Za-z])\/g, \u0027$1ctdep-$2\u0027)\r\n        .replace(\/ctdep-style\/gi, \u0027style\u0027);\r\n\r\n    newNode.innerHTML = innerHTML;\r\n\r\n    return newNode;\r\n};\r\n\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n\r\n        var a = document.createElement(\"script\"),\r\n            s = document.getElementsByTagName(\"script\")[0];\r\n        a.async = true;\r\n        a.crossOrigin = \"anonymous\";\r\n        a.type = \"text\/javascript\";\r\n        a.src = \"https:\/\/cdnssl.clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        s.parentNode.insertBefore(a, s);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            LiveExclude: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function (changeMonitor) {\r\n                changeMonitor.observe();\r\n                if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n                    changeMonitor.exclude({\r\n                        selector: window.ClickTaleCMSelector,\r\n                        multiple: true\r\n                    });\r\n                }\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) != -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function (settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 1000000,\r\n                MaxElementCount: 10000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n\r\n        var EnableCM = document.querySelector(\u0027.wcs-hd-container .wcs-primary\u0027) ? false : true;\r\n        var locationL = location.pathname;\r\n        EnableCM = EnableCM \u0026\u0026 (((locationL.indexOf(\"usa\/mobile\") \u003e -1 \u0026\u0026 locationL.indexOf(\"R\") \u003e -1) || (location.href.toLowerCase() == \"https:\/\/www.ray-ban.com\/usa\/mobile\/sunglasses\/clp\")) ? false : true);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n            Enable: EnableCM,\r\n            Repeats: 20,\r\n            Interval: 200\r\n        };\r\n\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                        selector: selector,\r\n                        transform: (function (attributesArr) {\r\n                            return function (el) {\r\n                                var attrs = el.attributes;\r\n                                var attrsToReturn = {}\r\n                                for (var i = 0; i \u003c attrs.length; i++) {\r\n                                    var name = attrs[i].nodeName;\r\n                                    attrsToReturn[name] = attrs[i].nodeValue;\r\n                                }\r\n                                for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                    var attr = attributesArr[u];\r\n                                    var attrib = el.getAttribute(attr);\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                }\r\n\r\n                                return attrsToReturn;\r\n                            }\r\n                        })(attributesArr)\r\n                    });\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: [selector, function (elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function (curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n                            }, []);\r\n                            return Array.prototype.filter.call(els, function (child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n                            });\r\n                        }],\r\n                        transform: function (el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function () {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function (rewriteApi) {\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function (buffer) {\r\n                var bodyClone = ClickTaleSettings.PTC.cloneNodeIE9(buffer);\r\n\r\n                if (window.ClickTaleSettings.PTC.AssetManager \u0026\u0026\r\n                    window.ClickTaleSettings.PTC.AssetManager.isActive \u0026\u0026\r\n                    typeof window.ClickTaleSettings.PTC.AssetManager.makeChanges == \u0027function\u0027) {\r\n                    window.ClickTaleSettings.PTC.AssetManager.makeChanges(bodyClone);\r\n                }\r\n\r\n                var selectorReg = \/((?:^|,|\\s|\u003e|\\+|\\~)+)([A-Za-z])\/g;\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027].replace(selectorReg, \u0027$1ctdep-$2\u0027);\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function (el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function (child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToRemove, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToReplace, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var reg = \/\u003e\u003c\\\/(?:area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)\u003e\/gi;\r\n                var clone = bodyClone.innerHTML.replace(\/ctdep-\/gi, \u0027\u0027).replace(reg, \u0027 \\\/\u003e\u0027).replace(\/\u003c!--clicktalesvgreplace ([\\s\\S]+?)--\u003e\/g, \u0027$1\u0027);\r\n                return clone;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"https:\\\/\\\/cdnssl.clicktale.net\\\/www\\\/tc\\\/jquery.min.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n        \/\/AM ========= FONTS ===========\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027@font-face{.*?}\u0027, \u0027gim\u0027),\r\n            replace: \u0027\u0027\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cinput[^\u003e]*type=\"(?:text|email)\"[^\u003e]*value=\")([^\"]+)(\"[^\u003e]*\u003e)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----$3\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cinput[^\u003e]*type=\"email\"[^\u003e]*value=\")([^\"]+)(\"[^\u003e]*\u003e)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----$3\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cdiv class=\"rb-order-number\"\u003e)(\u003cspan\u003e[^\u003c]*\u003c\/span\u003e)\u003cp\u003e([^\u003c]*)\u003c\/p\u003e\u0027, \u0027gim\u0027),\r\n            replace: \"$1$2-----\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003ch1 class=\"rb-page-header\"\u003e[^T]*)Thank you for your order([^\\.]*\\.)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cdiv class=\"rb-page-text\"\u003e)([^:]*:)([^\u003c]*)\u003c\/p\u003e\u0027, \u0027gim\u0027),\r\n            replace: \"$1$2-----\"\r\n        });\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\/\/Start CAP Integrations\r\n(function () {\r\n\r\n    function init(context) {\r\n\r\n        function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n            csKey = csTypeVendorPrefix + csKey;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"trackDynamicVariable\", {\r\n                key: csKey,\r\n                value: csValue\r\n            }]);\r\n\r\n            if (csEventType === \"etr\") {\r\n                if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tClickTaleEventTrigger(\"@ET@ \" + csKey);\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n            } else if (csEventType === \"reg\") {\r\n                _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n            }\r\n\r\n            if (csPV) {\r\n                _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n            }\r\n        };\r\n\r\n        \/*\r\n         *Name: Qubit CAP Integration\r\n         *Version: 1.9\r\n         *Required Shared Components: Self Invoking function, _uxa afterPageView callback, sendToCS\r\n         *\/\r\n        function startQBIntegration() {\r\n            integrationQBstarted = true;\r\n\r\n            function startAB() {\r\n                var tvp = \"AB_QB_\";\r\n                var campaignName = \"\";\r\n                var variationName = \"\";\r\n\r\n                window.uv.on(\"qubit.experience\", function (e) {\r\n                    if (e \u0026\u0026 typeof e.experienceId === \"number\" \u0026\u0026 typeof e.variationMasterId === \"number\" \u0026\u0026 typeof e.isControl === \"boolean\") {\r\n                        if (window.__qubit \u0026\u0026 __qubit.experiences \u0026\u0026 typeof __qubit.experiences.getExperiencesMeta === \"function\") {\r\n                            var allQubitVariants = __qubit.experiences.getExperiencesMeta();\r\n\r\n                            if (allQubitVariants \u0026\u0026 typeof allQubitVariants === \"object\") {\r\n                                for (var i = 0; i \u003c allQubitVariants.length; i++) {\r\n                                    if (allQubitVariants[i].id === e.experienceId \u0026\u0026 typeof allQubitVariants[i].id === \"number\") {\r\n                                        if (allQubitVariants[i].name) {\r\n                                            campaignName = allQubitVariants[i].name;\r\n                                        } else {\r\n                                            campaignName = e.experienceId;\r\n                                        }\r\n                                        if (e.isControl === true) {\r\n                                            variationName = \"Control\";\r\n                                        } else if (allQubitVariants[i].variations \u0026\u0026 allQubitVariants[i].variations[e.variationId] \u0026\u0026 allQubitVariants[i].variations[e.variationId].name) {\r\n                                            variationName = allQubitVariants[i].variations[e.variationId].name;\r\n                                        } else {\r\n                                            variationName = e.variationMasterId;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (campaignName \u0026\u0026 variationName) {\r\n                            sendToCS(tvp, campaignName, variationName);\r\n                        }\r\n\r\n                    }\r\n                }).replay();\r\n            }\r\n\r\n            startAB();\r\n\r\n            function startFB() {\r\n                var tvp = \"FB_QB_\";\r\n                var fbQname = \"\";\r\n                var fbValue = \"\";\r\n\r\n                window.uv.on(\"qubit.surveyResponseItem\", function (e) {\r\n                    if (e \u0026\u0026 e.value \u0026\u0026 e.value.boolean \u0026\u0026 e.value.boolean === true) {\r\n                        if (e.question \u0026\u0026 e.question.text \u0026\u0026 e.question.type \u0026\u0026 (e.question.type === \"radio\" || e.question.type === \"checkbox\")) {\r\n                            fbQname = e.question.text;\r\n                            if (typeof (e.choice) === \"object\" \u0026\u0026 typeof (e.choice.order) === \"number\" \u0026\u0026 typeof (e.choice.text) === \"string\") {\r\n                                fbValue = e.choice.order + \"-\" + e.choice.text;\r\n                                sendToCS(tvp, \"Feedback Submitted - \" + fbQname, fbValue, \"etr\", \"cs_qubit=feedback_submitted\");\r\n                            }\r\n                        }\r\n                    } else if (e \u0026\u0026 e.question \u0026\u0026 e.question.text \u0026\u0026 e.question.type === \"score\") {\r\n                        var fbQname = e.question.text;\r\n                        if (typeof (e.value) === \"object\" \u0026\u0026 typeof (e.value.integer) === \"string\") {\r\n                            var fbValue = e.value.integer;\r\n\r\n                            if (fbQname \u0026\u0026 fbValue) {\r\n                                sendToCS(tvp, \"Feedback Rating - \" + fbQname, fbValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            startFB();\r\n        }\r\n\r\n        var integrationQBstarted = false;\r\n\r\n        var uv = window.uv;\r\n        if (uv) {\r\n            startQBIntegration();\r\n        } else {\r\n            Object.defineProperty(window, \"uv\", {\r\n                configurable: true,\r\n                get: function () {\r\n                    return uv;\r\n                },\r\n                set: function (n) {\r\n                    uv = n;\r\n                    if (!integrationQBstarted) {\r\n                        startQBIntegration();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \/\/Qubit CAP Integration End\r\n    }\r\n\r\n    function callback(context) {\r\n        if (!disableCallback) {\r\n            disableCallback = true;\r\n            init(context);\r\n\r\n            if (window.CS_CONF) {\r\n                CS_CONF.integrations = CS_CONF.integrations || [];\r\n                CS_CONF.integrations.push(\"Qubit\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var disableCallback = false;\r\n\r\n    window._uxa = window._uxa || [];\r\n    _uxa.push([\"afterPageView\", callback]);\r\n\r\n})();\r\n\/\/End CAP Integrations\r\n\r\n\/\/Integrations\r\nwindow.ClickTaleSettings.PTC.Integrations = [\r\n    \"Monetate | Core\",\r\n    \"Monetate | CEC\",\r\n    \"Qubit | Core\",\r\n    \"Qubit | CEC\",\r\n    \"Qubit | Contentsquare\"\r\n];\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.monitorScriptName = \"Monitor-1.5.2.js\";\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig);\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u002717307919-93d2-44a7-9e46-558bfb3501f2.js?DeploymentConfigName=dev_IMP-144\u0026Version=2\u0027;\r\n\t\t\tvar scripts = ClickTaleGlobal.scripts;\r\n\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(scripts.sri \u0026\u0026 scripts.sri.hashes){\n        pccScriptElement.integrity = scripts.sri.hashes.pcc;\n        pccScriptElement.src = scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=8, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www46\",\r\n\t\tSubsId=233397;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\t\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow._uxa = window._uxa || [];\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.CustomVariables = window.ClickTaleSettings.PTC.CustomVariables || [];\r\nwindow.ClickTaleSettings.PTC.CustomVariables = [\r\n    { displayName: \u0027Page Type\u0027, key: \u0027Page_Type\u0027, slot: 1 },\r\n    { displayName: \u0027Page Name\u0027, key: \u0027Page_Name\u0027, slot: 2 },\r\n    { displayName: \u0027Page Section 1\u0027, key: \u0027Page_Section1\u0027, slot: 3 },\r\n    { displayName: \u0027Action\u0027, key: \u0027Action\u0027, slot: 4 },\r\n    { displayName: \u0027Products Id\u0027, key: \u0027Products_Id_Csv\u0027, slot: 5 },\r\n    { displayName: \u0027Products Category\u0027, key: \u0027Products_Category_Csv\u0027, slot: 6 },\r\n    { displayName: \u0027Products Price\u0027, key: \u0027Products_Price_Csv\u0027, slot: 7 },\r\n    { displayName: \u0027User Login Status\u0027, key: \u0027User_LoginStatus\u0027, slot: 8 },\r\n    { displayName: \u0027User Segments\u0027, key: \u0027User_Segments\u0027, slot: 9 },\r\n    { displayName: \u0027Order Payment Type\u0027, key: \u0027Order_PaymentType\u0027, slot: 10 },\r\n    { displayName: \u0027Search Keyword\u0027, key: \u0027Search_Keyword\u0027, slot: 11 },\r\n    { displayName: \u0027Error Code\u0027, key: \u0027Error_Code\u0027, slot: 12 },\r\n    { displayName: \u0027Order Cart Id\u0027, key: \u0027Order_CartId\u0027, slot: 13 },\r\n    { displayName: \u0027Order Id\u0027, key: \u0027Order_Id\u0027, slot: 14 },\r\n    { displayName: \u0027Exam Id\u0027, key: \u0027Exam_Id\u0027, slot: 15 }\r\n];\r\n\r\n\r\nfunction sendCustomVariables() {\r\n    let CustomVariables = window.ClickTaleSettings.PTC.CustomVariables, utagData = window[\u0027utag_data\u0027];\r\n    if (!!utagData) {\r\n        CustomVariables.forEach((CustomVariable, index) =\u003e {\r\n            utag_data[CustomVariable.key] \u0026\u0026 window._uxa.push([\u0027setCustomVariable\u0027, CustomVariable.slot, CustomVariable.displayName, utagData[CustomVariable.key]]);\r\n        })\r\n    }\r\n}\r\n\r\nwindow.ClickTaleOnStop = window.ClickTaleOnStop || [];\r\nClickTaleOnStop.push(sendCustomVariables);\r\nsendCustomVariables();\r\n\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageTime = Date.now();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        \/\/LUXO-314\r\n        if (document.location.href.indexOf(\u0027customise\u0027) \u003e -1 || document.location.href.indexOf(\u0027customize\u0027) \u003e -1) {\r\n            return !!document.querySelectorAll(\".fc-nav-flyout-without-ags \u003e li\").length;\r\n        }\r\n        \/\/LUXO-367\r\n        if (document.location.href == \"https:\/\/www.ray-ban.com\/usa\") {\r\n            var counter = 0;\r\n            document.querySelectorAll(\u0027#rb-homepage section[data-module*=\"row\"]\u0027).forEach((el) =\u003e {\r\n                counter += el.children.length;\r\n            });\r\n            return ((counter \u003e 3) \u0026\u0026 (document.querySelector(\u0027#rb-homepage section[data-module*=\"row\"]\u0027).offsetHeight \u003e 0));\r\n        }\r\n        if (document.querySelectorAll(\u0027footer\u0027) \u003e 0) {\r\n            return (document.querySelectorAll(\u0027footer .wcs-hidden\u0027).length \u003c 5);\r\n        }\/\/LUXO-185\r\n\r\n        if (document.location.pathname.indexOf(\"customize\/rb\") \u003e -1) {\r\n            return document.getElementById(\u0027proLoaderBox\u0027) === null;\r\n        } else if (document.location.pathname.indexOf(\"\/usa\/customize\") \u003e -1) {\r\n            return document.querySelectorAll(\u0027#wcs_footer\u0027).length \u003e 0 \u0026\u0026 document.querySelectorAll(\u0027.fpls-box-overlay-content .fpls-box-overlay-user\u0027).length \u003e 2;\r\n        } else if (document.location.pathname.indexOf(\"\/usa\/mobile\/customize\") \u003e -1) {\r\n            return document.querySelectorAll(\u0027.fpls-box-overlay-content .fpls-box-overlay-user\u0027).length \u003e 0;\r\n        } else if (document.location.pathname.indexOf(\"sunglasses\/ferrari\/clp\") \u003e -1) {\r\n            return !!document.querySelector(\u0027.b-loaded\u0027);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n\/\/LUXO-18\r\nif (Array.isArray(window.ClickTaleSettings.PTC.fieldsBuffer)) {\r\n    window.ClickTaleSettings.PTC.fieldsBuffer.forEach(function (fieldArr) {\r\n        if (typeof ClickTaleField == \u0027function\u0027) {\r\n            ClickTaleField(fieldArr[0], fieldArr[1]);\r\n        }\r\n    })\r\n}\r\n\r\nif (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    \/\/AB Test Integration Timeout\r\n    setTimeout(function () {\r\n        if (document.location.href.indexOf(\"usa\/mobile\/\") \u003e -1) {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 70, doUpload);\r\n        } if (document.location.href == \"https:\/\/www.ray-ban.com\/usa\") {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 80, doUpload);\r\n        }\r\n        else {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 50, doUpload);\r\n        }\r\n    }, 1000);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\t\twindow._uxa = window._uxa || [];\r\n\twindow._uxa.push([\u0027startDataCollection\u0027]);\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar scripts = ClickTaleGlobal.scripts;\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(scripts.sri \u0026\u0026 scripts.sri.hashes){\r\n        wrScript.integrity = scripts.sri.hashes.wr;\r\n        wrScript.src = scripts.sri.path + \"wr.js\";\r\n\t}else {\r\n        wrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-eu1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-eu1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
				document.body.appendChild(script);
			})();
	}		

if (!ClickTaleGlobal.init.configFoundPTC)
{
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 8\r\n\/\/ WR destination: www46\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nwindow.ClickTaleGlobal.VisualEditorDesignerExists = !!0;\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/LUXO\r\n(function () {\r\n    if (typeof ClickTaleCreateDOMElement === \"function\") {\r\n        var oldClickTaleCreateDOMElement = ClickTaleCreateDOMElement;\r\n        ClickTaleCreateDOMElement = function (tagName) {\r\n            var scriptEl = oldClickTaleCreateDOMElement.apply(this, arguments);\r\n            if (typeof tagName == \u0027string\u0027 \u0026\u0026 tagName.toLowerCase() == \u0027script\u0027) {\r\n                scriptEl.addEventListener(\u0027load\u0027, function () {\r\n                    if (this.src \u0026\u0026 this.src.indexOf(\u0027\/pcc\/\u0027) != -1) {\r\n                        if (typeof ClickTaleField == \u0027function\u0027) {\r\n                            ClickTaleField(\u0027pcc loaded\u0027, \u0027true\u0027);\r\n                        } else {\r\n                            window.ClickTaleSettings.PTC.fieldsBuffer = window.ClickTaleSettings.PTC.fieldsBuffer || [];\r\n                            window.ClickTaleSettings.PTC.fieldsBuffer.push([\u0027pcc loaded\u0027, \u0027true\u0027]);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            return scriptEl;\r\n        }\r\n    }\r\n})();\r\n\r\n\/\/PTC Code Version 9.8\r\nif (window.ClickTaleMonitor \u0026\u0026 window.ClickTaleMonitor.Settings \u0026\u0026 window.ClickTaleMonitor.Settings.get) {\r\n    window.ClickTaleMonitor.Settings.get().configure({\r\n        metrics: {\r\n            modifiedChunkToggle: false\r\n        }\r\n    });\r\n}\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.Compression = window.ClickTaleSettings.Compression || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\nwindow.ClickTaleUIDCookieName = \u0027WRUIDAWS20180402\u0027;\r\n\r\nfunction deleteIrrelevantUIDCookies(relevant) {\r\n    var cookieArray = document.cookie.replace(\/\\s+\/g, \u0027\u0027).split(\";\");\r\n    var hostArray = location.host.split(\u0027.\u0027);\r\n    var topDom = (hostArray.length \u003c= 2 ? location.host : hostArray.slice(1).join(\u0027.\u0027));\r\n    for (var i = 0; i \u003c cookieArray.length; i++) {\r\n        var currentCookie = cookieArray[i];\r\n        var cookieKey = currentCookie.substring(0, currentCookie.indexOf(\u0027=\u0027));\r\n        if (cookieKey.indexOf(\u0027WRUID\u0027) \u003e -1 \u0026\u0026 relevant.indexOf(cookieKey) == -1) {\r\n            document.cookie = cookieKey + \"=\u0027\u0027;domain=.\" + topDom + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n            document.cookie = cookieKey + \"=\u0027\u0027;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n        }\r\n    }\r\n}\r\ndeleteIrrelevantUIDCookies([window.ClickTaleUIDCookieName]);\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        window.ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        window.ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n\r\n    var isFV = !!fv;\r\n    if (typeof ClickTaleField == \u0027function\u0027) {\r\n        ClickTaleField(\u0027okToRunPCC\u0027, isFV.toString());\r\n    } else {\r\n        window.ClickTaleSettings.PTC.fieldsBuffer = window.ClickTaleSettings.PTC.fieldsBuffer || [];\r\n        window.ClickTaleSettings.PTC.fieldsBuffer.push([\u0027okToRunPCC\u0027, isFV.toString()]);\r\n    }\r\n    return fv;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \".ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \".engravingBox .img h3 , .pac-item, .pac-item *, .ctHidden,.wcs-delivery-right,.wcs-myOrder-delivery .wcs-omega\u003espan,#saved_addresses .wcs-details-address-book span,.delivery-addr-exp p,#saved_addresses h4,#delivery_address\u003ediv,#delivery_address\u003ediv\u003espan,.trade,.wcs-login-link,.wcs-remixed-engraving,span.wcs-product-blurb span,#forgotPassword_email,.address span,.address p,.addressname,#ty-header span\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \"#CEPreviewBox p,[id*=\u0027standardinternal\u0027] .img h3,[id*=\u0027standardexternal\u0027] .img h3,[id*=\u0027premiumexternal_\u0027] .img h3,.wcs-payment-confirm-title h3 , .wcs-payment-confirm-title span span, .wcs-order-details .wcs-alpha\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\/\/LUXO-179\r\n    selector: \"div.awesomplete li, div.awesomplete li mark, #myaccount-details div.rb-myaccount-details-body div.rb-data-item p.rb-data-item-value\",\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [];\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClickTalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClickTalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) { }\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    maxUrlLength: 600,\r\n    subscriberId: \u0027233397\u0027,\r\n    pid: \u00278\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: \/webapp\\\/wcs\\\/stores\\\/servlet\\\/GetEspotContent\/i,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    reduceUrl: function (strUrl) {\r\n        var queryExist = strUrl.indexOf(\u0027?\u0027);\r\n        if (queryExist \u003e -1) {\r\n            var queryString = strUrl.slice(queryExist, strUrl.length);\r\n            var dividedUrl = strUrl.split(\u0027?\u0027);\r\n            var urlWithoutQuery = dividedUrl[0];\r\n\r\n            queryString = queryString.replace(\/\\W\/g, \u0027\u0027);\r\n            var fileName = urlWithoutQuery.slice(urlWithoutQuery.lastIndexOf(\u0027\/\u0027) + 1, urlWithoutQuery.length);\r\n            queryString = queryString + fileName;\r\n            var queryStringLength = queryString.length;\r\n            if (queryStringLength \u003e 450) {\r\n                queryString = queryString.slice(queryStringLength - 450, queryStringLength);\r\n            }\r\n            strUrl = urlWithoutQuery.slice(0, urlWithoutQuery.indexOf(fileName) + 1) + queryString;\r\n        }\r\n        return strUrl;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            if ((this.isNeedForImg \u0026\u0026 url.length \u003e this.maxUrlLength) || (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(url))) {\r\n                url = window.ClickTaleSettings.PTC.AssetManager.reduceUrl(url);\r\n\r\n                AMUrl = this.getPrefixUrl() + \u0027\/\u0027 + type + \u0027\/CTAMREDUCED\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n            } else {\r\n                AMUrl = this.getPrefixUrl() + \u0027\/\u0027 + type + \u0027\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \").replace(\/\\?.*\/g, \"\");\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    changeUrlToS3: function (bodyClone, selector, attribute, type) {\r\n        if (typeof selector == \u0027string\u0027 \u0026\u0026 typeof attribute == \u0027string\u0027 \u0026\u0026 typeof type == \u0027string\u0027) {\r\n            Array.prototype.forEach.call(bodyClone.querySelectorAll(selector), function (el, ind) {\r\n                var attr = el.getAttribute(attribute);\r\n                if (attr.indexOf(window.ClickTaleSettings.PTC.AssetManager.storageUrl) == -1 \u0026\u0026 attr.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                    if (attr.indexOf(\u0027http\u0027) == -1) {\r\n                        var element = attribute == \u0027href\u0027 ? \u0027link\u0027 : \u0027img\u0027;\r\n                        var liveElement = document.querySelector(element + \u0027[\u0027 + attribute + \u0027=\"\u0027 + attr + \u0027\"]\u0027);\r\n                        if (liveElement \u0026\u0026 liveElement[attribute]) {\r\n                            attr = liveElement[attribute];\r\n                        }\r\n                    }\r\n                    var finalAssetURL = window.ClickTaleSettings.PTC.AssetManager.getFullURL(type, attr);\r\n                    el.setAttribute(attribute, finalAssetURL);\r\n                    if (finalAssetURL.indexOf(\u0027CTAMREDUCED\u0027) \u003e -1) {\r\n                        el.setAttribute(\u0027data-ctam\u0027, attr);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    makeChanges: function (bodyClone) {\r\n        if (this.pid \u0026\u0026 this.subscriberId) {\r\n\r\n            window.ClickTaleSettings.PTC.AssetManager.changeUrlToS3(bodyClone, \u0027ctdep-link[href][rel*=\"stylesheet\"]\u0027, \u0027href\u0027, \u0027CSS\u0027);\r\n            if (this.isNeedForImg) {\r\n                window.ClickTaleSettings.PTC.AssetManager.changeUrlToS3(bodyClone, \u0027ctdep-img[src]\u0027, \u0027src\u0027, \u0027IMAGE\u0027);\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function (innerHTML) {\r\n    if (innerHTML instanceof Element) {\r\n        innerHTML = innerHTML.innerHTML;\r\n    }\r\n\r\n    var reg = \/\u003c(area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)[^\u003e]*\u003e\/gi;\r\n    var newNode = document.createElement(\u0027div\u0027);\r\n    var docFrag = document.createDocumentFragment();\r\n    docFrag.appendChild(newNode);\r\n    if (document.documentMode) {\r\n        innerHTML = innerHTML\r\n            .replace(\/\\$\/g, \u0027$$$$\u0027)\r\n            .replace(\/(\u003csvg[\\s\\S]+?\u003c\\\/svg\u003e)\/gi, function (m, g1) {\r\n                if (g1) {\r\n                    return \u0027\u003c!--clicktalesvgreplace \u0027 + g1.replace(\/\u003c!--[\\s\\S]+?--\u003e\/g, \u0027\u0027) + \u0027 --\u003e\u0027;\r\n                }\r\n                return m;\r\n            });\r\n    }\r\n    innerHTML = innerHTML\r\n        .replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027)\r\n        .replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027)\r\n        .replace(reg, \u0027$\u0026\u003c\\\/$1\u003e\u0027)\r\n        .replace(\/(\u003c\\\/?)([A-Za-z])\/g, \u0027$1ctdep-$2\u0027)\r\n        .replace(\/ctdep-style\/gi, \u0027style\u0027);\r\n\r\n    newNode.innerHTML = innerHTML;\r\n\r\n    return newNode;\r\n};\r\n\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n\r\n        var a = document.createElement(\"script\"),\r\n            s = document.getElementsByTagName(\"script\")[0];\r\n        a.async = true;\r\n        a.crossOrigin = \"anonymous\";\r\n        a.type = \"text\/javascript\";\r\n        a.src = \"https:\/\/cdnssl.clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        s.parentNode.insertBefore(a, s);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            LiveExclude: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function (changeMonitor) {\r\n                changeMonitor.observe();\r\n                if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n                    changeMonitor.exclude({\r\n                        selector: window.ClickTaleCMSelector,\r\n                        multiple: true\r\n                    });\r\n                }\r\n\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) != -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function (settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 1000000,\r\n                MaxElementCount: 10000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n\r\n        var EnableCM = document.querySelector(\u0027.wcs-hd-container .wcs-primary\u0027) ? false : true;\r\n        var locationL = location.pathname;\r\n        EnableCM = EnableCM \u0026\u0026 (((locationL.indexOf(\"usa\/mobile\") \u003e -1 \u0026\u0026 locationL.indexOf(\"R\") \u003e -1) || (location.href.toLowerCase() == \"https:\/\/www.ray-ban.com\/usa\/mobile\/sunglasses\/clp\")) ? false : true);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n            Enable: EnableCM,\r\n            Repeats: 20,\r\n            Interval: 200\r\n        };\r\n\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                        selector: selector,\r\n                        transform: (function (attributesArr) {\r\n                            return function (el) {\r\n                                var attrs = el.attributes;\r\n                                var attrsToReturn = {}\r\n                                for (var i = 0; i \u003c attrs.length; i++) {\r\n                                    var name = attrs[i].nodeName;\r\n                                    attrsToReturn[name] = attrs[i].nodeValue;\r\n                                }\r\n                                for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                    var attr = attributesArr[u];\r\n                                    var attrib = el.getAttribute(attr);\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                }\r\n\r\n                                return attrsToReturn;\r\n                            }\r\n                        })(attributesArr)\r\n                    });\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: [selector, function (elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function (curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n                            }, []);\r\n                            return Array.prototype.filter.call(els, function (child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n                            });\r\n                        }],\r\n                        transform: function (el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function () {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function (rewriteApi) {\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function (buffer) {\r\n                var bodyClone = ClickTaleSettings.PTC.cloneNodeIE9(buffer);\r\n\r\n                if (window.ClickTaleSettings.PTC.AssetManager \u0026\u0026\r\n                    window.ClickTaleSettings.PTC.AssetManager.isActive \u0026\u0026\r\n                    typeof window.ClickTaleSettings.PTC.AssetManager.makeChanges == \u0027function\u0027) {\r\n                    window.ClickTaleSettings.PTC.AssetManager.makeChanges(bodyClone);\r\n                }\r\n\r\n                var selectorReg = \/((?:^|,|\\s|\u003e|\\+|\\~)+)([A-Za-z])\/g;\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027].replace(selectorReg, \u0027$1ctdep-$2\u0027);\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function (el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function (child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToRemove, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace.replace(selectorReg, \u0027$1ctdep-$2\u0027));\r\n                            Array.prototype.forEach.call(elementsToReplace, function (el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var reg = \/\u003e\u003c\\\/(?:area|base|br|col|command|embed|hr|input|keygen|link|menuitem|meta|param|source|track|wbr|img)\u003e\/gi;\r\n                var clone = bodyClone.innerHTML.replace(\/ctdep-\/gi, \u0027\u0027).replace(reg, \u0027 \\\/\u003e\u0027).replace(\/\u003c!--clicktalesvgreplace ([\\s\\S]+?)--\u003e\/g, \u0027$1\u0027);\r\n                return clone;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"https:\\\/\\\/cdnssl.clicktale.net\\\/www\\\/tc\\\/jquery.min.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n        \/\/AM ========= FONTS ===========\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027@font-face{.*?}\u0027, \u0027gim\u0027),\r\n            replace: \u0027\u0027\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cinput[^\u003e]*type=\"(?:text|email)\"[^\u003e]*value=\")([^\"]+)(\"[^\u003e]*\u003e)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----$3\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cinput[^\u003e]*type=\"email\"[^\u003e]*value=\")([^\"]+)(\"[^\u003e]*\u003e)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----$3\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cdiv class=\"rb-order-number\"\u003e)(\u003cspan\u003e[^\u003c]*\u003c\/span\u003e)\u003cp\u003e([^\u003c]*)\u003c\/p\u003e\u0027, \u0027gim\u0027),\r\n            replace: \"$1$2-----\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003ch1 class=\"rb-page-header\"\u003e[^T]*)Thank you for your order([^\\.]*\\.)\u0027, \u0027gim\u0027),\r\n            replace: \"$1-----\"\r\n        });\r\n        rewriteApi.add({\r\n            pattern: new RegExp(\u0027(\u003cdiv class=\"rb-page-text\"\u003e)([^:]*:)([^\u003c]*)\u003c\/p\u003e\u0027, \u0027gim\u0027),\r\n            replace: \"$1$2-----\"\r\n        });\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\/\/Start CAP Integrations\r\n(function () {\r\n\r\n    function init(context) {\r\n\r\n        function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n            csKey = csTypeVendorPrefix + csKey;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"trackDynamicVariable\", {\r\n                key: csKey,\r\n                value: csValue\r\n            }]);\r\n\r\n            if (csEventType === \"etr\") {\r\n                _uxa.push([\"trackEventTriggerRecording\", \"@ET@ \" + csKey]);\r\n            } else if (csEventType === \"reg\") {\r\n                _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n            }\r\n\r\n            if (csPV) {\r\n                _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n            }\r\n        };\r\n\r\n        \/*\r\n         *Name: Qubit CAP Integration\r\n         *Version: 1.9\r\n         *Required Shared Components: Self Invoking function, _uxa afterPageView callback, sendToCS\r\n         *\/\r\n        function startQBIntegration() {\r\n            integrationQBstarted = true;\r\n\r\n            function startAB() {\r\n                var tvp = \"AB_QB_\";\r\n                var campaignName = \"\";\r\n                var variationName = \"\";\r\n\r\n                window.uv.on(\"qubit.experience\", function (e) {\r\n                    if (e \u0026\u0026 typeof e.experienceId === \"number\" \u0026\u0026 typeof e.variationMasterId === \"number\" \u0026\u0026 typeof e.isControl === \"boolean\") {\r\n                        if (window.__qubit \u0026\u0026 __qubit.experiences \u0026\u0026 typeof __qubit.experiences.getExperiencesMeta === \"function\") {\r\n                            var allQubitVariants = __qubit.experiences.getExperiencesMeta();\r\n\r\n                            if (allQubitVariants \u0026\u0026 typeof allQubitVariants === \"object\") {\r\n                                for (var i = 0; i \u003c allQubitVariants.length; i++) {\r\n                                    if (allQubitVariants[i].id === e.experienceId \u0026\u0026 typeof allQubitVariants[i].id === \"number\") {\r\n                                        if (allQubitVariants[i].name) {\r\n                                            campaignName = allQubitVariants[i].name;\r\n                                        } else {\r\n                                            campaignName = e.experienceId;\r\n                                        }\r\n                                        if (e.isControl === true) {\r\n                                            variationName = \"Control\";\r\n                                        } else if (allQubitVariants[i].variations \u0026\u0026 allQubitVariants[i].variations[e.variationId] \u0026\u0026 allQubitVariants[i].variations[e.variationId].name) {\r\n                                            variationName = allQubitVariants[i].variations[e.variationId].name;\r\n                                        } else {\r\n                                            variationName = e.variationMasterId;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (campaignName \u0026\u0026 variationName) {\r\n                            sendToCS(tvp, campaignName, variationName);\r\n                        }\r\n\r\n                    }\r\n                }).replay();\r\n            }\r\n\r\n            startAB();\r\n\r\n            function startFB() {\r\n                var tvp = \"FB_QB_\";\r\n                var fbQname = \"\";\r\n                var fbValue = \"\";\r\n\r\n                window.uv.on(\"qubit.surveyResponseItem\", function (e) {\r\n                    if (e \u0026\u0026 e.value \u0026\u0026 e.value.boolean \u0026\u0026 e.value.boolean === true) {\r\n                        if (e.question \u0026\u0026 e.question.text \u0026\u0026 e.question.type \u0026\u0026 (e.question.type === \"radio\" || e.question.type === \"checkbox\")) {\r\n                            fbQname = e.question.text;\r\n                            if (typeof (e.choice) === \"object\" \u0026\u0026 typeof (e.choice.order) === \"number\" \u0026\u0026 typeof (e.choice.text) === \"string\") {\r\n                                fbValue = e.choice.order + \"-\" + e.choice.text;\r\n                                sendToCS(tvp, \"Feedback Submitted - \" + fbQname, fbValue, \"etr\", \"cs_qubit=feedback_submitted\");\r\n                            }\r\n                        }\r\n                    } else if (e \u0026\u0026 e.question \u0026\u0026 e.question.text \u0026\u0026 e.question.type === \"score\") {\r\n                        var fbQname = e.question.text;\r\n                        if (typeof (e.value) === \"object\" \u0026\u0026 typeof (e.value.integer) === \"string\") {\r\n                            var fbValue = e.value.integer;\r\n\r\n                            if (fbQname \u0026\u0026 fbValue) {\r\n                                sendToCS(tvp, \"Feedback Rating - \" + fbQname, fbValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            startFB();\r\n        }\r\n\r\n        var integrationQBstarted = false;\r\n\r\n        var uv = window.uv;\r\n        if (uv) {\r\n            startQBIntegration();\r\n        } else {\r\n            Object.defineProperty(window, \"uv\", {\r\n                configurable: true,\r\n                get: function () {\r\n                    return uv;\r\n                },\r\n                set: function (n) {\r\n                    uv = n;\r\n                    if (!integrationQBstarted) {\r\n                        startQBIntegration();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \/\/Qubit CAP Integration End\r\n    }\r\n\r\n    function callback(context) {\r\n        if (!disableCallback) {\r\n            disableCallback = true;\r\n            init(context);\r\n\r\n            if (window.CS_CONF) {\r\n                CS_CONF.integrations = CS_CONF.integrations || [];\r\n                CS_CONF.integrations.push(\"Qubit\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var disableCallback = false;\r\n\r\n    window._uxa = window._uxa || [];\r\n    _uxa.push([\"afterPageView\", callback]);\r\n\r\n})();\r\n\/\/End CAP Integrations\r\n\r\n\/\/Integrations\r\nwindow.ClickTaleSettings.PTC.Integrations = [\r\n    \"Monetate | Core\",\r\n    \"Monetate | CEC\",\r\n    \"Qubit | Core\",\r\n    \"Qubit | CEC\",\r\n    \"Qubit | Contentsquare\"\r\n];\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\nClickTaleGlobal.init.monitorScriptName = \"Monitor-1.5.2.js\";\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 typeof ClickTaleGlobal.init.pmc === \"function\" \u0026\u0026 ClickTaleGlobal.init.pmc(autoMonitorConfig);\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u002717307919-93d2-44a7-9e46-558bfb3501f2.js?DeploymentConfigName=Release_20200514\u0026Version=1\u0027;\r\n\t\t\tvar scripts = ClickTaleGlobal.scripts;\r\n\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(scripts.sri \u0026\u0026 scripts.sri.hashes){\n        pccScriptElement.integrity = scripts.sri.hashes.pcc;\n        pccScriptElement.src = scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\twindow.ClickTaleGlobal.PCCExists = true;\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=8, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www46\",\r\n\t\tSubsId=233397;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function() {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageTime = Date.now();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        \/\/LUXO-314\r\n        if (document.location.href.indexOf(\u0027customise\u0027) \u003e -1 || document.location.href.indexOf(\u0027customize\u0027) \u003e -1) {\r\n            return !!document.querySelectorAll(\".fc-nav-flyout-without-ags \u003e li\").length;\r\n        }\r\n        \/\/LUXO-367\r\n        if(document.location.href == \"https:\/\/www.ray-ban.com\/usa\"){\r\n            var counter =0;\r\n            document.querySelectorAll(\u0027#rb-homepage section[data-module*=\"row\"]\u0027).forEach((el)=\u003e{\r\n                counter += el.children.length;\r\n            });\r\n            return ( (counter \u003e 3) \u0026\u0026 (document.querySelector(\u0027#rb-homepage section[data-module*=\"row\"]\u0027).offsetHeight \u003e 0) );\r\n        }\r\n\t\tif(document.querySelectorAll(\u0027footer\u0027) \u003e 0) {\r\n\t\t\treturn (document.querySelectorAll(\u0027footer .wcs-hidden\u0027).length \u003c 5);\r\n\t\t}\/\/LUXO-185\r\n\t\t\r\n\t\tif (document.location.pathname.indexOf(\"customize\/rb\") \u003e -1) {\r\n            return document.getElementById(\u0027proLoaderBox\u0027) === null;\r\n        } else if (document.location.pathname.indexOf(\"\/usa\/customize\") \u003e -1) {\r\n            return document.querySelectorAll(\u0027#wcs_footer\u0027).length \u003e 0 \u0026\u0026 document.querySelectorAll(\u0027.fpls-box-overlay-content .fpls-box-overlay-user\u0027).length \u003e 2;\r\n        } else if (document.location.pathname.indexOf(\"\/usa\/mobile\/customize\") \u003e -1) {\r\n            return document.querySelectorAll(\u0027.fpls-box-overlay-content .fpls-box-overlay-user\u0027).length \u003e 0;\r\n        } else if (document.location.pathname.indexOf(\"sunglasses\/ferrari\/clp\") \u003e -1) {\r\n            return !!document.querySelector(\u0027.b-loaded\u0027);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n\/\/LUXO-18\r\nif (Array.isArray(window.ClickTaleSettings.PTC.fieldsBuffer)) {\r\n    window.ClickTaleSettings.PTC.fieldsBuffer.forEach(function(fieldArr) {\r\n        if (typeof ClickTaleField == \u0027function\u0027) {\r\n            ClickTaleField(fieldArr[0], fieldArr[1]);\r\n        }\r\n    })\r\n}\r\n\r\nif (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    \/\/AB Test Integration Timeout\r\n    setTimeout(function() {\r\n        if (document.location.href.indexOf(\"usa\/mobile\/\") \u003e -1) {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 70, doUpload);\r\n        }if (document.location.href == \"https:\/\/www.ray-ban.com\/usa\") {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 80, doUpload);\r\n        }\r\n         else {\r\n            window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 400, 50, doUpload);\r\n        }\r\n    }, 1000);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\t\twindow._uxa = window._uxa || [];\r\n\twindow._uxa.push([\u0027startDataCollection\u0027]);\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar scripts = ClickTaleGlobal.scripts;\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(scripts.sri \u0026\u0026 scripts.sri.hashes){\r\n        wrScript.integrity = scripts.sri.hashes.wr;\r\n        wrScript.src = scripts.sri.path + \"wr.js\";\r\n\t}else {\r\n        wrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-eu1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-eu1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
		document.body.appendChild(script);	})();
	}

//Signature:ePS2P0lp93n/Pt7SidffCH9eB7GAK+GTdLS70gMktNGg9zR66lpXp2mzRsCldKy/MIaXJaYLr9kBxTfzqlyhX/oChHwTMzKjJX+djkD8UBnRKwaRSaL+sGhyG16EDSITPGUeZ98SHk6/EdUD7lTfOSAdXRxNy1jUzYzSCfWA9qM=